<?xml version="1.0" encoding="UTF-8"?>
<documentation>

	<class name="Log">
		<description>
			A class for logging messages at different levels of severity.
		</description>

		<enum name="Level">
			<description>
				An enumeration representing log levels.
			</description>

			<values>
				<value name="Unknown">
					<description>An unknown log level.</description>
				</value>
				<value name="Info">
					<description>Informational log level.</description>
				</value>
				<value name="Warn">
					<description>Warning log level.</description>
				</value>
				<value name="Error">
					<description>Error log level.</description>
				</value>
				<value name="Max">
					<description>Maximum value for the Level enum.</description>
				</value>
			</values>
		</enum>

		<methods>
			<function>
				<signature>
					static void add_callback(Callback p_callback, void* p_data)
				</signature>
				<description>
					Adds a log callback function.
				</description>
				<param name="p_callback">
					The callback function to add.
				</param>
				<param name="p_data">
					Additional data to associate with the callback.
				</param>
			</function>
			<function>
				<signature>
					static void remove_callback(Callback p_callback, void* p_data)
				</signature>
				<description>
					Removes a log callback function.
				</description>
				<param name="p_callback">
					The callback function to remove.
				</param>
				<param name="p_data">
					Additional data associated with the callback.
				</param>
			</function>
			<function>
				<signature>
					static void log_string(Level p_level, const String& p_string)
				</signature>
				<description>
					Logs a message at the specified log level.
				</description>
				<param name="p_level">
					The log level for the message.
				</param>
				<param name="p_string">
					The message to log.
				</param>
			</function>
			<function>
				<signature>
					static void log_info(const String& p_string)
				</signature>
				<description>
					Logs an informational message.
				</description>
				<param name="p_string">
					The informational message to log.
				</param>
			</function>
			<function>
				<signature>
					static void log_warn(const String& p_string)
				</signature>
				<description>
					Logs a warning message.
				</description>
				<param name="p_string">
					The warning message to log.
				</param>
			</function>
			<function>
				<signature>
					static void log_error(const String& p_string)
				</signature>
				<description>
					Logs an error message.
				</description>
				<param name="p_string">
					The error message to log.
				</param>
			</function>
			<function>
				<signature>
					static String get_level_string(Level p_level)
				</signature>
				<description>
					Retrieves a string representation of the log level.
				</description>
				<param name="p_level">
					The log level to convert to a string.
				</param>
				<returns>
					The log level as a string.
				</returns>
			</function>
			<function>
				<signature>
					static Level find_level(const String& p_level)
				</signature>
				<description>
					Finds the log level corresponding to the given string representation.
				</description>
				<param name="p_level">
					The string representation of the log level to find.
				</param>
				<returns>
					The log level enum value corresponding to the provided string representation, or Level::Unknown if not found.
				</returns>
			</function>
		</methods>
	</class>
</documentation>
